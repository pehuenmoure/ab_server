<!DOCTYPE html>
<html>
<head>
  <!--<script src="/socket.io/socket.io.js"></script>-->
  <title>Graph</title>

  <script type="text/javascript">

    var d0 = [];
    var d1 = []; 
    var d2 = [];
    var d3 = [];
    var data = [d0, d1, d2, d3]; // dataPoints

    var chart = new CanvasJS.Chart("chartContainer",{
      //backgroundColor: "gray",
      axisY:{
        minimum: -2,
        maximum: 2
      },
      title :{
        text: "Live Data"
      },      
      data: [{
        type: "line",
        dataPoints: d0 
      },{
        type: "line",
        dataPoints: data[1] 
      },{
        type: "line",
        dataPoints: data[2] 
      },{
        type: "line",
        dataPoints: data[3] 
      }]
    });
    chart.render();
    var xVal = 0;
    var yVal = 100; 
    var dataLength = 50; // number of dataPoints visible at any point

    var updateChart = function (newData) {
      for (var j = 0; j < 4; j++) { 
        data[j].push({
          x: xVal,
          y: parseFloat(newData[j].toFixed(4))
        });
      };
      xVal++;

      if (data[0].length > dataLength){
        data.map(function (i){
          return i.shift()
        });       
      }
      
      chart.render();   
    };

    var webSocketHost = location.protocol === 'https:' ? 'wss://' : 'ws://';
    var externalIp = '<%= externalIp %>';
    var webSocketUri =  webSocketHost + externalIp + ':65080';

    console.log(webSocketUri);

    /* Establish the WebSocket connection and register event handlers. */
    var websocket = new WebSocket(webSocketUri);

    function format(array){
      var s = "";
      for (i = 0; i < 4; i++){
        s = s + "<th>" + array[i].toFixed(4) + "</th>"
      }return s;
    }

    function download(){
      var file_name = "" + $('#file_name').val();
      console.log(file_name);
      var msg = {
        msgType: "download",
        filename: file_name.toString()
      }
      websocket.send(JSON.stringify(msg));
    }

    function reset(){
      console.log('Reset');
      var msg = {
        msgType: "reset"
      }
      websocket.send(JSON.stringify(msg));
      d1 = [];
      d2 = [];
      d3 = [];
      d4 = [];
    }

  </script>

</head>


<body>
  <button type="button" class="btn btn-warning" onclick="download()">Download</button>
  <button type="button" class="btn btn-info" onclick="reset()">Reset</button>
  <form>
    File name:<br>
    <input type="text" name="file_name" id="file_name"><br>
  </form>

  <div id="chartContainer" style="height: 300px; width:100%;"></div>
  <table align = "center" id = data></table>
  
  
</body>

</html>